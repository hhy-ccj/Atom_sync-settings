# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * http://flight-manual.atom.io/using-atom/sections/basic-customization/#customizing-keybindings
# * http://flight-manual.atom.io/behind-atom/sections/keymaps-in-depth/
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on macOS and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * http://flight-manual.atom.io/hacking-atom/sections/debugging/#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#configuring-with-cson

# ------------------------------------
# Let the editor more like the vim
# ------------------------------------
# Vim normal mode
'atom-text-editor.vim-mode-plus:not(.insert-mode)':
  # Move the cursor
  '; e': 'vim-mode-plus:move-to-last-character-of-line'
  '; h': 'vim-mode-plus:move-to-first-character-of-line'
  'K': 'custom:do-5-k'
  'J': 'custom:do-5-j'
  'H': 'custom:do-5-h'
  'L': 'custom:do-5-l'
  # Copy the vim command mode
  # 'space': 'command-palette:toggle'
  'space': 'ex-mode:open'
  # Paste the 0 register
  '; p': 'custom:paste-0-reg'
  # Move to other pane
  'alt-k': 'window:focus-pane-above'
  'alt-j': 'window:focus-pane-below'
  'alt-h': 'window:focus-pane-on-left'
  'alt-l': 'window:focus-pane-on-right'
  # Restore current file search function
  'ctrl-f': 'unset!' # default cmd:'vim-mode-plus:scroll-full-screen-down'

# Vim insert mode
'atom-text-editor.vim-mode-plus.insert-mode':
  # Move the cursor
  'alt-k': 'vim-mode-plus:move-up'
  'alt-j': 'vim-mode-plus:move-down'
  'alt-h': 'vim-mode-plus:move-left'
  'alt-l': 'vim-mode-plus:move-right'

# When autocomplete plus pop-up active in insert-mode
'atom-text-editor.vim-mode-plus.insert-mode.autocomplete-active':
  'alt-k': 'core:move-up'
  'alt-j': 'core:move-down'

# In select-list such like fuzzy-finder
'.select-list atom-text-editor':
  'alt-k': 'core:move-up'
  'alt-j': 'core:move-down'

# Toggle-line-comments
'atom-workspace atom-text-editor:not([mini])':
  '; / /': 'editor:toggle-line-comments' # default key:'ctrl-/'

# 'Tree view' operating
'atom-text-editor':
  'f2': 'unset!' # default cmd:'bookmarks:jump-to-next-bookmark':
'.tree-view':
  'f2': 'unset!' # default cmd:'tree-view:move'
  # Open the dir or the file like in the vim
  'o': 'tree-view:open-selected-entry' # default key:'enter'
  # Move the cursor 5 steps at a time like in the vim
  'K': 'custom:tree-do-5-k'
  'J': 'custom:tree-do-5-j'
  # Move the cursor to the top or buttom like in the vim
  'g g': 'core:move-to-top' # default key:'home'
  'G': 'core:move-to-bottom' # default key:'end'
'.platform-win32, .platform-linux':
  # Let F2 toggle the tree view
  'f2': 'tree-view:toggle' # default key:'ctrl-\\'
  # Move the cursor like in the vim
  # 'alt-h': 'tree-view:toggle-focus' # default key:'alt-\\'
  # 'alt-l': 'tree-view:toggle-focus' # default key:'alt-\\'

# 'Project Find Results' pane operating
'body':
  'alt-k': 'core:move-up' # default key:'up'
  'alt-j': 'core:move-down' # default key:'down'
  'alt-o': 'core:confirm' # default key:'enter'
  'alt-h': 'window:focus-pane-on-left'
  'alt-l': 'window:focus-pane-on-right'
# 'Project Find Results' pane operating
  'ctrl-2': 'pane:show-next-item' # default key:'ctrl-pageup'
  'ctrl-1': 'pane:show-previous-item' # default key:'ctrl-pagedown'

# 'Cursor History' package's keymap
# Like browser's Go and Back button, like ctrl-i, ctrl-o in Vim. You can go/back to cursor position history.
'atom-workspace':
  'ctrl-i': 'cursor-history:next'
  'ctrl-o': 'cursor-history:prev'
  # 'ctrl-cmd-i': 'cursor-history:next-within-editor'
  # 'ctrl-cmd-o': 'cursor-history:prev-within-editor'
# 'symbols-tree-nav' package's keymap
  # 'ctrl-alt-o': 'unset!' # default cmd:'symbols-tree-nav:toggle'
  't l': 'symbols-tree-nav:toggle' # default key:'ctrl-alt-o'
# 'cscope' package's keymap
  '; f t': 'atom-cscope:toggle' # default key:'ctrl-alt-o'
  # '\\ f s': 'atom-cscope:find-symbol'
  # '\\ f g': 'atom-cscope:find-global-definition'
  # '\\ f t': 'atom-cscope:find-text-string'
  # '\\ f f': 'atom-cscope:find-file'
  # '\\ f c': 'atom-cscope:find-functions-calling'
  # '\\ f i': 'atom-cscope:find-files-including'
  '\\ f s': 'custom:cscope-find-symbol'
  '\\ f g': 'custom:cscope-find-global-definition'
  '\\ f t': 'custom:cscope-find-text-string'
  '\\ f f': 'custom:cscope-find-file'
  '\\ f c': 'custom:cscope-find-functions-calling'
  '\\ f i': 'custom:cscope-find-files-including'
  'shift-f': 'atom-cscope:toggle-file'

# 'Atom-Ctags' package's keymap
'.platform-win32 atom-text-editor':
  'f o': 'atom-ctags:go-to-declaration' # default key:'f12'
  # 'f f': 'atom-ctags:toggle-file-symbols' # default key:'ctrl-r'
  # 'f p': 'atom-ctags:toggle-project-symbols'

'atom-text-editor.vim-mode-plus':
  'ctrl-c': 'unset!' # default cmd:'vim-mode-plus:reset-normal-mode'
