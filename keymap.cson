# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * http://flight-manual.atom.io/using-atom/sections/basic-customization/#customizing-keybindings
# * http://flight-manual.atom.io/behind-atom/sections/keymaps-in-depth/
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on macOS and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * http://flight-manual.atom.io/hacking-atom/sections/debugging/#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#configuring-with-cson

# ------------------------------------
# For vim-mode-plus key remap
# ------------------------------------
# Vim normal mode
'atom-text-editor.vim-mode-plus:not(.insert-mode)':
  # Move the cursor
  '; e': 'vim-mode-plus:move-to-last-character-of-line'
  '; h': 'vim-mode-plus:move-to-first-character-of-line'
  'K': 'custom:do-5-k'
  'J': 'custom:do-5-j'
  'H': 'custom:do-5-h'
  'L': 'custom:do-5-l'
  # Copy the vim command mode
  'space': 'command-palette:toggle'
  # Paste the 0 register
  '; p': 'custom:paste-0-reg'
  # Move to other pane
  'ctrl-k': 'window:focus-pane-above'
  'ctrl-j': 'window:focus-pane-below'
  'ctrl-h': 'window:focus-pane-on-left'
  'ctrl-l': 'window:focus-pane-on-right'
# Vim insert mode
'atom-text-editor.vim-mode-plus.insert-mode':
  # Move the cursor
  'ctrl-k': 'vim-mode-plus:move-up'
  'ctrl-j': 'vim-mode-plus:move-down'
  'ctrl-h': 'vim-mode-plus:move-left'
  'ctrl-l': 'vim-mode-plus:move-right'

# When autocomplete plus pop-up active in insert-mode
'atom-text-editor.vim-mode-plus.insert-mode.autocomplete-active':
  'ctrl-k': 'core:move-up'
  'ctrl-j': 'core:move-down'

# In select-list such like fuzzy-finder
'.select-list atom-text-editor':
  'ctrl-k': 'core:move-up'
  'ctrl-j': 'core:move-down'

# Toggle-line-comments
'atom-workspace atom-text-editor:not([mini])':
  '; / /': 'editor:toggle-line-comments' # default:'ctrl-/'

# Toggle tree view
'atom-text-editor':
  'f2': 'unset!' # default cmd:'bookmarks:jump-to-next-bookmark':
'.platform-win32, .platform-linux':
  'f2': 'tree-view:toggle' # default:'ctrl-\\'
